{{> template/header1}}


<h1>Admin Dashboard</h1>

{{#if error}}
  <div class="alert error">{{error}}</div>
{{/if}}

<div class="admin-stats">
  <div class="stat-card">
    <div class="stat-icon">
      <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
        <path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"></path>
        <polyline points="14 2 14 8 20 8"></polyline>
        <line x1="16" y1="13" x2="8" y3="13"></line>
        <line x1="16" y1="17" x2="8" y3="17"></line>
        <polyline points="10 9 9 9 8 9"></polyline>
      </svg>
    </div>
    <h3>Today's Orders</h3>
    <p>{{stats.todayOrders}}</p>
  </div>
  
  <div class="stat-card">
    <div class="stat-icon">
      <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
        <path d="M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z"></path>
      </svg>
    </div>
    <h3>Total Cakes</h3>
    <p>{{stats.totalCakes}}</p>
  </div>
  
  <div class="stat-card">
    <div class="stat-icon">
      <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
        <circle cx="12" cy="12" r="10"></circle>
        <path d="M12 8v4"></path>
        <path d="M12 16h.01"></path>
      </svg>
    </div>
    <h3>Pending Orders</h3>
    <p>{{stats.pendingOrders}}</p>
  </div>
  
  <div class="stat-card">
    <div class="stat-icon">
      <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
        <line x1="12" y1="1" x2="12" y2="23"></line>
        <path d="M17 5H9.5a3.5 3.5 0 0 0 0 7h5a3.5 3.5 0 0 1 0 7H6"></path>
      </svg>
    </div>
    <h3>30-Day Revenue</h3>
     <p>${{formatCurrency stats.revenueTotal}}</p>
  </div>
</div>

<div class="dashboard-grid">
  <div class="dashboard-card">
    <h2>Recent Orders</h2>
    <table class="admin-table">
      <thead>
        <tr>
          <th>Order #</th>
          <th>Customer</th>
          <th>Date</th>
          <th>Total</th>
        </tr>
      </thead>
      <tbody>
        {{#each stats.recentOrders}}
          <tr>
            <td>#{{id}}</td>
            <td>{{customer_name}}</td>
            <td>{{formatDate created_at}}</td>
            <td>${{total}}</td>
          </tr>
        {{else}}
          <tr>
            <td colspan="4">No recent orders</td>
          </tr>
        {{/each}}
      </tbody>
    </table>
    <a href="/admin/orders" class="btn">View All Orders</a>
  </div>
  
  <div class="dashboard-card">
    <h2>Popular Cakes</h2>
    <div class="popular-cakes">
      {{#each stats.popularCakes}}
        <div class="popular-cake">
          <img src="{{image_url}}" alt="{{name}}">
          <div>
            <h3>{{name}}</h3>
            <p>Ordered {{total_ordered}} times</p>
          </div>
        </div>
      {{else}}
        <p>No popular cakes yet</p>
      {{/each}}
    </div>
    <a href="/admin/cakes" class="btn">Manage Cakes</a>
  </div>
</div>

<div class="dashboard-card full-width">
  <h2>Revenue (Last 30 Days)</h2>
  <div class="chart-container">
    <canvas id="revenueChart"></canvas>
  </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
  document.addEventListener('DOMContentLoaded', () => {
    const revenueData = {{{stats.revenueStats}}};
    
    const ctx = document.getElementById('revenueChart').getContext('2d');
    new Chart(ctx, {
      type: 'bar',
      data: {
        labels: revenueData.map(item => new Date(item.date).toLocaleDateString()),
        datasets: [{
          label: 'Daily Revenue ($)',
          data: revenueData.map(item => item.revenue),
          backgroundColor: 'rgba(255, 133, 162, 0.7)',
          borderColor: 'rgba(255, 133, 162, 1)',
          borderWidth: 1
        }]
      },
      options: {
        responsive: true,
        scales: {
          y: {
            beginAtZero: true,
            ticks: {
              callback: function(value) {
                return '$' + value;
              }
            }
          }
        }
      }
    });
  });
</script>
{{> template/footer1}}